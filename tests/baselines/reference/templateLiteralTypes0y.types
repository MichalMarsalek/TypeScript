//// [tests/cases/conformance/types/literal/templateLiteralTypes0y.ts] ////

=== templateLiteralTypes0y.ts ===
type Digits = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9;
>Digits : Digits
>       : ^^^^^^

type D100000 = `${Digits}_${Digits}_${Digits}_${Digits}_${Digits}`;
>D100000 : `${Digits}_${Digits}_${Digits}_${Digits}_${Digits}`
>        : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

const x: D100000 = "1_2_3";
>x : `${Digits}_${Digits}_${Digits}_${Digits}_${Digits}`
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>"1_2_3" : "1_2_3"
>        : ^^^^^^^

const y: D100000 = "1_2_3_4_55";
>y : `${Digits}_${Digits}_${Digits}_${Digits}_${Digits}`
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>"1_2_3_4_55" : "1_2_3_4_55"
>             : ^^^^^^^^^^^^

type N = '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9'
>N : N
>  : ^

type PartExt = '-sunny' | '-rainy' | '-snowy' | '-cloudy' | '-foggy' | '-dark' | '' // ...
>PartExt : PartExt
>        : ^^^^^^^

type PartVar = '-var1' | '-var2' | '-var3' | '-var4' | '-var5' | '-var6' | '-var7' | ''
>PartVar : PartVar
>        : ^^^^^^^

type PartSpecial = '-special' | ''
>PartSpecial : PartSpecial
>            : ^^^^^^^^^^^

type TypeItem = `item-${N}${N}${N}${PartExt}${PartVar}${PartSpecial}`
>TypeItem : `item-${N}${N}${N}${PartExt}${PartVar}${PartSpecial}`
>         : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

