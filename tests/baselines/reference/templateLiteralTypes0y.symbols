//// [tests/cases/conformance/types/literal/templateLiteralTypes0y.ts] ////

=== templateLiteralTypes0y.ts ===
type Digits = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9;
>Digits : Symbol(Digits, Decl(templateLiteralTypes0y.ts, 0, 0))

type D100000 = `${Digits}_${Digits}_${Digits}_${Digits}_${Digits}`;
>D100000 : Symbol(D100000, Decl(templateLiteralTypes0y.ts, 0, 52))
>Digits : Symbol(Digits, Decl(templateLiteralTypes0y.ts, 0, 0))
>Digits : Symbol(Digits, Decl(templateLiteralTypes0y.ts, 0, 0))
>Digits : Symbol(Digits, Decl(templateLiteralTypes0y.ts, 0, 0))
>Digits : Symbol(Digits, Decl(templateLiteralTypes0y.ts, 0, 0))
>Digits : Symbol(Digits, Decl(templateLiteralTypes0y.ts, 0, 0))

const x: D100000 = "1_2_3";
>x : Symbol(x, Decl(templateLiteralTypes0y.ts, 4, 5))
>D100000 : Symbol(D100000, Decl(templateLiteralTypes0y.ts, 0, 52))

const y: D100000 = "1_2_3_4_55";
>y : Symbol(y, Decl(templateLiteralTypes0y.ts, 5, 5))
>D100000 : Symbol(D100000, Decl(templateLiteralTypes0y.ts, 0, 52))

type N = '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9'
>N : Symbol(N, Decl(templateLiteralTypes0y.ts, 5, 32))

type PartExt = '-sunny' | '-rainy' | '-snowy' | '-cloudy' | '-foggy' | '-dark' | '' // ...
>PartExt : Symbol(PartExt, Decl(templateLiteralTypes0y.ts, 7, 66))

type PartVar = '-var1' | '-var2' | '-var3' | '-var4' | '-var5' | '-var6' | '-var7' | ''
>PartVar : Symbol(PartVar, Decl(templateLiteralTypes0y.ts, 8, 83))

type PartSpecial = '-special' | ''
>PartSpecial : Symbol(PartSpecial, Decl(templateLiteralTypes0y.ts, 9, 87))

type TypeItem = `item-${N}${N}${N}${PartExt}${PartVar}${PartSpecial}`
>TypeItem : Symbol(TypeItem, Decl(templateLiteralTypes0y.ts, 10, 34))
>N : Symbol(N, Decl(templateLiteralTypes0y.ts, 5, 32))
>N : Symbol(N, Decl(templateLiteralTypes0y.ts, 5, 32))
>N : Symbol(N, Decl(templateLiteralTypes0y.ts, 5, 32))
>PartExt : Symbol(PartExt, Decl(templateLiteralTypes0y.ts, 7, 66))
>PartVar : Symbol(PartVar, Decl(templateLiteralTypes0y.ts, 8, 83))
>PartSpecial : Symbol(PartSpecial, Decl(templateLiteralTypes0y.ts, 9, 87))

